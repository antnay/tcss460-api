{
	"info": {
		"_postman_id": "747df413-f906-4657-9ab6-caa3c365d020",
		"name": "TCSS 460 Movie API",
		"description": "RESTful API for movies with comprehensive movie information including directors and genres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46264729"
	},
	"item": [
		{
			"name": "System",
			"item": [
				{
					"name": "Get API Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/api-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"api-info"
							]
						},
						"description": "Returns basic information about the API including name, version, and documentation link"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api-info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"TCSS 460 API\",\n    \"version\": \"1.0.0\",\n    \"description\": \"RESTful API for movies\",\n    \"documentation\": \"/api-docs\"\n}"
						}
					]
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Checks if the database connection is working"
					},
					"response": [
						{
							"name": "Database Healthy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Database is working!\"\n}"
						},
						{
							"name": "Database Connection Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Database connection failed\"\n}"
						}
					]
				}
			],
			"description": "System health and information endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Save the access token to environment variable",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"accessToken\", jsonData.jwt.accessToken);",
									"    console.log(\"Access token saved:\", jsonData.jwt.accessToken);",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Authenticate a user with email and password, returns JWT tokens"
					},
					"response": [
						{
							"name": "Login Successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Set-Cookie",
									"value": "refresh-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly"
								}
							],
							"cookie": [],
							"body": "{\n    \"username\": \"johndoe\",\n    \"role\": \"user\",\n    \"jwt\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImpvaG5kb2UiLCJyb2xlIjoidXNlciIsImlhdCI6MTYzMjE1MjAwMH0.xyz\",\n        \"type\": \"Bearer\"\n    }\n}"
						},
						{
							"name": "User Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"nonexistent@example.com\",\n    \"password\": \"password123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": \"user does not exist\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						},
						{
							"name": "Incorrect Password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"wrongpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 401,\n    \"message\": \"incorrect login provided\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Save the access token to environment variable",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"accessToken\", jsonData.jwt.accessToken);",
									"    console.log(\"Access token saved:\", jsonData.jwt.accessToken);",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"securePassword123\",\n    \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": [
						{
							"name": "Registration Successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"securePassword123\",\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Set-Cookie",
									"value": "refresh-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly"
								}
							],
							"cookie": [],
							"body": "{\n    \"username\": \"johndoe\",\n    \"role\": \"user\",\n    \"jwt\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImpvaG5kb2UiLCJyb2xlIjoidXNlciIsImlhdCI6MTYzMjE1MjAwMH0.xyz\",\n        \"type\": \"Bearer\"\n    }\n}"
						},
						{
							"name": "User Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"securePassword123\",\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": \"User with this email or username already exists\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"jd\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"securePassword123\",\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": [\n        {\n            \"code\": \"too_small\",\n            \"message\": \"username must be greater than 3 characters\"\n        }\n    ],\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						}
					]
				}
			],
			"description": "User authentication and registration"
		},
		{
			"name": "Movies",
			"item": [
				{
					"name": "Get All Movies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/movies?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"movies"
							],
							"query": [
								{
									"key": "year",
									"value": "2023",
									"description": "Filter by release year",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results per page (default: 20, max: 100)"
								}
							]
						},
						"description": "Retrieve a paginated list of movies with optional year filtering. Returns movies sorted alphabetically by title with aggregated directors and genres."
					},
					"response": [
						{
							"name": "Paginated Movies",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/movies?page=1&limit=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"movies"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"title\": \"¿Quieres ser mi hijo?\",\n            \"original_title\": \"¿Quieres ser mi hijo?\",\n            \"directors\": \"Ihtzi Hurtado\",\n            \"genres\": \"Comedy, Romance\",\n            \"release_date\": \"2023-09-21T00:00:00.000Z\",\n            \"runtime_minutes\": 100,\n            \"overview\": \"Lu, a conformist woman in her forties, learns that her 15-year partner has been having extramarital affairs. Starting from scratch, she gets involved in an unexpected relationship with a young womanizer.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/9GuvODahvuFqdhuZ16aBLR4UJoP.jpg\",\n            \"backdrop_url\": \"/tMH5OICumORytM9kpoo8S20KMDZ.jpg\"\n        },\n        {\n            \"title\": \"¿Y Cómo Es Él?\",\n            \"original_title\": \"¿Y Cómo Es Él?\",\n            \"directors\": \"Ariel Winograd\",\n            \"genres\": \"Comedy, Drama\",\n            \"release_date\": \"2022-04-07T00:00:00.000Z\",\n            \"runtime_minutes\": 95,\n            \"overview\": \"Thomas is a meek man on the verge of a nervous breakdown. Despite his situation he decides to fake a work trip to go to Vallarta to confront Jero, a taxi driver who is sleeping with his wife.\",\n            \"budget\": \"0\",\n            \"revenue\": \"1478358\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/n5nH4IcSmlYgAil6NOVvn6d35BH.jpg\",\n            \"backdrop_url\": \"/khURfna5TfNcIkovnuCNvizHHGg.jpg\"\n        },\n        {\n            \"title\": \"'71\",\n            \"original_title\": \"'71\",\n            \"directors\": \"Yann Demange\",\n            \"genres\": \"Action, Drama, Thriller, War\",\n            \"release_date\": \"2014-10-10T00:00:00.000Z\",\n            \"runtime_minutes\": 99,\n            \"overview\": \"A young British soldier must find his way back to safety after his unit accidentally abandons him during a riot in the streets of Belfast.\",\n            \"budget\": \"11000000\",\n            \"revenue\": \"3200000\",\n            \"mpa_rating\": \"15+\",\n            \"poster_url\": \"/wbhqBocsP7QoX8SZLvCsGOWUAaQ.jpg\",\n            \"backdrop_url\": \"/aTloiKdNs2c8vlstbx3wBWD6Thi.jpg\"\n        },\n        {\n            \"title\": \"“The Shorts” by Aldo, Giovanni and Giacomo\",\n            \"original_title\": \"“I Corti” di Aldo, Giovanni e Giacomo\",\n            \"directors\": \"Arturo Brachetti\",\n            \"genres\": \"Comedy\",\n            \"release_date\": \"1996-03-29T00:00:00.000Z\",\n            \"runtime_minutes\": 130,\n            \"overview\": \"I Corti (\\\"Shorts\\\") by Aldo, Giovanni & Giacomo was the first stage show of the comedy trio, with the participation of Marina Massironi. It was recorded live at the Teatro Nuovo in Ferrara on 28 and 29 March 1996. Produced by Agidi, with the theatre direction of Arturo Brachetti.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"\",\n            \"poster_url\": \"/y3hEulMYSTQuvmI5jBTyWrcvJQX.jpg\",\n            \"backdrop_url\": \"/mFVGzW8a2Z37NphnuB6liChiuRv.jpg\"\n        },\n        {\n            \"title\": \"(500) Days of Summer\",\n            \"original_title\": \"(500) Days of Summer\",\n            \"directors\": \"Marc Webb\",\n            \"genres\": \"Comedy, Drama, Romance\",\n            \"release_date\": \"2009-07-17T00:00:00.000Z\",\n            \"runtime_minutes\": 95,\n            \"overview\": \"Tom, greeting-card writer and hopeless romantic, is caught completely off-guard when his girlfriend, Summer, suddenly dumps him. He reflects on their 500 days together to try to figure out where their love affair went sour, and in doing so, Tom rediscovers his true passions in life.\",\n            \"budget\": \"7500000\",\n            \"revenue\": \"60781545\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/qXAuQ9hF30sQRsXf40OfRVl0MJZ.jpg\",\n            \"backdrop_url\": \"/1M2i4Mxd03elGOTmEkIvqrHfmyS.jpg\"\n        },\n        {\n            \"title\": \"(Girl)Friend\",\n            \"original_title\": \"Ami-Ami\",\n            \"directors\": \"Victor Saint Macary\",\n            \"genres\": \"Comedy, Romance\",\n            \"release_date\": \"2018-01-17T00:00:00.000Z\",\n            \"runtime_minutes\": 82,\n            \"overview\": \"Vincent and Nefeli just moved in together. They're best friends and swore to never fall in love again. That is until Vincent meets Julie.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"16+\",\n            \"poster_url\": \"/k1cKWy5uI0IDlqtxb7neOCzxEqy.jpg\",\n            \"backdrop_url\": \"/yIb1ynPoT0Zd6DWXOj3RfgV6LXP.jpg\"\n        },\n        {\n            \"title\": \"(T)Raumschiff Surprise - Periode 1\",\n            \"original_title\": \"(T)Raumschiff Surprise - Periode 1\",\n            \"directors\": \"Michael Herbig\",\n            \"genres\": \"Adventure, Comedy, Science Fiction\",\n            \"release_date\": \"2004-07-14T00:00:00.000Z\",\n            \"runtime_minutes\": 87,\n            \"overview\": \"Hundreds of years after humans have settled on Mars, Regulator Rogul and Lord Jens Maul, lead a force of Martians to Earth in order to conquer the planet. Queen Metaphor looks to the gay heroes aboard the spaceship Surprise -- Captain Kork, Mr. Spuck, and first engineer Schrotty -- for help.\",\n            \"budget\": \"9000000\",\n            \"revenue\": \"76341401\",\n            \"mpa_rating\": \"6\",\n            \"poster_url\": \"/sjYRm71LboXiUkI51FAMLvIjz9O.jpg\",\n            \"backdrop_url\": \"/wrTM20Hh6rc0Gzw6AkIF0sVBnOc.jpg\"\n        },\n        {\n            \"title\": \"[REC]\",\n            \"original_title\": \"[REC]\",\n            \"directors\": \"Jaume Balagueró, Paco Plaza\",\n            \"genres\": \"Horror, Mystery\",\n            \"release_date\": \"2007-11-23T00:00:00.000Z\",\n            \"runtime_minutes\": 78,\n            \"overview\": \"A television reporter and cameraman follow emergency workers into a dark apartment building and are quickly locked inside with something terrifying.\",\n            \"budget\": \"1500000\",\n            \"revenue\": \"32511655\",\n            \"mpa_rating\": \"18\",\n            \"poster_url\": \"/5XsVGgo8I12v3KlPcD0r1CNHMC6.jpg\",\n            \"backdrop_url\": \"/xfrguTH6maYiGsC8FXiQ9N3lZXw.jpg\"\n        },\n        {\n            \"title\": \"[REC]²\",\n            \"original_title\": \"[REC]²\",\n            \"directors\": \"Jaume Balagueró, Paco Plaza\",\n            \"genres\": \"Horror, Thriller\",\n            \"release_date\": \"2009-09-15T00:00:00.000Z\",\n            \"runtime_minutes\": 84,\n            \"overview\": \"The action continues from [REC], with the medical officer and a SWAT team outfitted with video cameras are sent into the sealed off apartment to control the situation.\",\n            \"budget\": \"5600000\",\n            \"revenue\": \"18469680\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/fJuIhJ5s8WGNZN3wuk9d84nMjXk.jpg\",\n            \"backdrop_url\": \"/svZPLmBwYHjlwDwHkZz4EotpXqx.jpg\"\n        },\n        {\n            \"title\": \"[REC]³ Genesis\",\n            \"original_title\": \"[REC]³ Génesis\",\n            \"directors\": \"Paco Plaza\",\n            \"genres\": \"Horror\",\n            \"release_date\": \"2012-03-30T00:00:00.000Z\",\n            \"runtime_minutes\": 80,\n            \"overview\": \"A pair of newlyweds must fight to survive when their wedding reception descends into chaos and carnage when their guests become infected by a virus that turns them into hungry zombies.\",\n            \"budget\": \"6400000\",\n            \"revenue\": \"11019975\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/tI1534q0Up7PBcLdXdFerLmIXn3.jpg\",\n            \"backdrop_url\": \"/zxPri7LbVdvdwAroeoUp5EXAse1.jpg\"\n        },\n        {\n            \"title\": \"[REC]⁴ Apocalypse\",\n            \"original_title\": \"[REC]⁴ Apocalipsis\",\n            \"directors\": \"Jaume Balagueró\",\n            \"genres\": \"Horror, Thriller\",\n            \"release_date\": \"2014-10-31T00:00:00.000Z\",\n            \"runtime_minutes\": 95,\n            \"overview\": \"Ángela Vidal, the young television reporter who entered the building with the firemen, manages to make it out alive. But what the soldiers don't know is that she carries the seed of the strange infection. She is to be taken to a provisional quarantine facility, a high-security installation where she will have to stay in isolation for several days. An old oil tanker, miles off shore and surrounded by water on all sides, has been especially equipped for the quarantine.\",\n            \"budget\": \"3000000\",\n            \"revenue\": \"4915757\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/nlSSZNESHkY1iPzYnpcRvYUr7Mz.jpg\",\n            \"backdrop_url\": \"/wKQpAxTL5MOpkb9Mk6w4vabtSe7.jpg\"\n        },\n        {\n            \"title\": \"#Alive\",\n            \"original_title\": \"#살아있다\",\n            \"directors\": \"Cho Il\",\n            \"genres\": \"Action, Horror, Science Fiction\",\n            \"release_date\": \"2020-06-24T00:00:00.000Z\",\n            \"runtime_minutes\": 98,\n            \"overview\": \"As a grisly virus rampages a city, a lone man stays locked inside his apartment, digitally cut off from seeking help and desperate to find a way out.\",\n            \"budget\": \"6300000\",\n            \"revenue\": \"13416285\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/lZPvLUMYEPLTE2df1VW5FHTYC8N.jpg\",\n            \"backdrop_url\": \"/k2SY15W9QXH9qL8f4a4BbytV1BE.jpg\"\n        },\n        {\n            \"title\": \"#realityhigh\",\n            \"original_title\": \"#realityhigh\",\n            \"directors\": \"Fernando Lebrija\",\n            \"genres\": \"Comedy\",\n            \"release_date\": \"2017-07-17T00:00:00.000Z\",\n            \"runtime_minutes\": 99,\n            \"overview\": \"When nerdy high schooler Dani finally attracts the interest of her longtime crush, she lands in the cross hairs of his ex, a social media celebrity.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"12\",\n            \"poster_url\": \"/iZliPeiiDta9KbONAhdFSXhTxrO.jpg\",\n            \"backdrop_url\": \"/smgZYp49OB6xo4hZewxzryrh5xN.jpg\"\n        },\n        {\n            \"title\": \"1\",\n            \"original_title\": \"1\",\n            \"directors\": \"Paul Crowder\",\n            \"genres\": \"Documentary\",\n            \"release_date\": \"2013-09-30T00:00:00.000Z\",\n            \"runtime_minutes\": 112,\n            \"overview\": \"Set in the golden era of Grand Prix Racing '1' tells the story of a generation of charismatic drivers who raced on the edge, risking their lives during Formula 1's deadliest period, and the men who stood up and changed the sport forever.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/nIHvkb3M1B9TnaiaABsfTzmFMYP.jpg\",\n            \"backdrop_url\": \"/nPqDbXYaMhR2XKQ9IU8bkX7YgO7.jpg\"\n        },\n        {\n            \"title\": \"1\",\n            \"original_title\": \"1\",\n            \"directors\": \"Dennis Iliadis\",\n            \"genres\": \"Science Fiction, Thriller\",\n            \"release_date\": \"2013-09-20T00:00:00.000Z\",\n            \"runtime_minutes\": 95,\n            \"overview\": \"Three college friends hit the biggest party of the year, where a mysterious phenomenon disrupts the night, quickly descending into a chaos that challenges their friendships - and whether they can stay alive.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"NR\",\n            \"poster_url\": \"/ve3e7AzvlfLDi2z3T05tCjYAT31.jpg\",\n            \"backdrop_url\": \"/ismwT9qk1Qkb7eS0UQOntL1o8XU.jpg\"\n        },\n        {\n            \"title\": \"10 Cloverfield Lane\",\n            \"original_title\": \"10 Cloverfield Lane\",\n            \"directors\": \"Dan Trachtenberg\",\n            \"genres\": \"Drama, Horror, Science Fiction, Thriller\",\n            \"release_date\": \"2016-03-10T00:00:00.000Z\",\n            \"runtime_minutes\": 104,\n            \"overview\": \"After a catastrophic car crash, a young woman wakes up in a survivalist's underground bunker, where he claims to have saved her from an apocalyptic attack that has left the outside world uninhabitable.\",\n            \"budget\": \"15000000\",\n            \"revenue\": \"110216998\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/84Dhwz93vCin6T1PX6ctSvWEuNE.jpg\",\n            \"backdrop_url\": \"/veGaHYcRHFPEoKfqxKbCEXI8tOT.jpg\"\n        },\n        {\n            \"title\": \"10 Days with Dad\",\n            \"original_title\": \"10 jours sans maman\",\n            \"directors\": \"Ludovic Bernard\",\n            \"genres\": \"Comedy, Family\",\n            \"release_date\": \"2020-02-19T00:00:00.000Z\",\n            \"runtime_minutes\": 104,\n            \"overview\": \"Antoine is the Head of HR of a big company. Managing people is his thing, so when his overwhelmed wife suddenly decides to go on holiday and leave him with the responsibility of the house and their four kids, he knows it will be a piece of cake for him. But Antoine has drastically underestimated the mess that four mischievous kids can cause...\",\n            \"budget\": \"0\",\n            \"revenue\": \"9305412\",\n            \"mpa_rating\": \"8\",\n            \"poster_url\": \"/ih0727BoT24cg87aOVfppZyqzNQ.jpg\",\n            \"backdrop_url\": \"/4y8hoQAveC7dVwAAsJJ78Y89lh9.jpg\"\n        },\n        {\n            \"title\": \"10 Items or Less\",\n            \"original_title\": \"10 Items or Less\",\n            \"directors\": \"Brad Silberling\",\n            \"genres\": \"Comedy, Drama\",\n            \"release_date\": \"2006-09-11T00:00:00.000Z\",\n            \"runtime_minutes\": 81,\n            \"overview\": \"An actor who is considering the role of a supermarket manager arrives at a grocery store on the outskirts of Los Angeles to do some field research. He subsequently becomes stranded, without a car or cell phone, and accepts a ride home with Scarlet, a cashier who is about to interview for a new job. The actor rediscovers the essence of his craft while helping Scarlet gain the confidence she needs to change her life.\",\n            \"budget\": \"400\",\n            \"revenue\": \"1\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/2MBxFTeRe4m7DC49PmIkMXMjMEO.jpg\",\n            \"backdrop_url\": \"/uXFmUOVUvw2coUYSCQu3Z4AnKCd.jpg\"\n        },\n        {\n            \"title\": \"10 Things I Hate About You\",\n            \"original_title\": \"10 Things I Hate About You\",\n            \"directors\": \"Gil Junger\",\n            \"genres\": \"Comedy, Drama, Romance\",\n            \"release_date\": \"1999-03-30T00:00:00.000Z\",\n            \"runtime_minutes\": 97,\n            \"overview\": \"On the first day at his new school, Cameron instantly falls for Bianca, the gorgeous girl of his dreams. The only problem is that Bianca is forbidden to date until her ill-tempered, completely un-dateable older sister Kat goes out, too. In an attempt to solve his problem, Cameron singles out the only guy who could possibly be a match for Kat: a mysterious bad boy with a nasty reputation of his own.\",\n            \"budget\": \"16000000\",\n            \"revenue\": \"53478166\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/ujERk3aKABXU3NDXOAxEQYTHe9A.jpg\",\n            \"backdrop_url\": \"/yvPbncYhMu9FfTjDhq0N5lgnVkO.jpg\"\n        },\n        {\n            \"title\": \"10 Years\",\n            \"original_title\": \"10 Years\",\n            \"directors\": \"Jamie Linden\",\n            \"genres\": \"Comedy, Drama\",\n            \"release_date\": \"2012-09-14T00:00:00.000Z\",\n            \"runtime_minutes\": 100,\n            \"overview\": \"A group of friends reunite ten years after their high-school graduation.\",\n            \"budget\": \"0\",\n            \"revenue\": \"203373\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/AuCM5jU751cMLKOtHybzUoL6RaX.jpg\",\n            \"backdrop_url\": \"/t3V1KBkkbsDTnflVhK2fSQCmTZz.jpg\"\n        }\n    ],\n    \"pagination\": {\n        \"currentPage\": 1,\n        \"pageSize\": 20,\n        \"totalItems\": 9345,\n        \"totalPages\": 468,\n        \"hasNextPage\": true,\n        \"hasPreviousPage\": false\n    }\n}"
						},
						{
							"name": "Movies Filtered by Year",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/movies?year=2025&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"movies"
									],
									"query": [
										{
											"key": "year",
											"value": "2025"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"title\": \"28 Years Later\",\n            \"original_title\": \"28 Years Later\",\n            \"directors\": \"Danny Boyle\",\n            \"genres\": \"Horror, Science Fiction, Thriller\",\n            \"release_date\": \"2025-06-18T00:00:00.000Z\",\n            \"runtime_minutes\": 115,\n            \"overview\": \"Twenty-eight years since the rage virus escaped a biological weapons laboratory, now, still in a ruthlessly enforced quarantine, some have found ways to exist amidst the infected. One such group lives on a small island connected to the mainland by a single, heavily-defended causeway. When one member departs on a mission into the dark heart of the mainland, he discovers secrets, wonders, and horrors that have mutated not only the infected but other survivors as well.\",\n            \"budget\": \"60000000\",\n            \"revenue\": \"150367300\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/mIg1qCkVxnAlM2TK3RUF0tdEXlE.jpg\",\n            \"backdrop_url\": \"/zav0v7gLWMu6pVwgsIAwt11GJ4C.jpg\"\n        },\n        {\n            \"title\": \"A Minecraft Movie\",\n            \"original_title\": \"A Minecraft Movie\",\n            \"directors\": \"Jared Hess\",\n            \"genres\": \"Action, Adventure, Comedy, Family, Fantasy\",\n            \"release_date\": \"2025-03-31T00:00:00.000Z\",\n            \"runtime_minutes\": 101,\n            \"overview\": \"Four misfits find themselves struggling with ordinary problems when they are suddenly pulled through a mysterious portal into the Overworld: a bizarre, cubic wonderland that thrives on imagination. To get back home, they'll have to master this world while embarking on a magical quest with an unexpected, expert crafter, Steve.\",\n            \"budget\": \"150000000\",\n            \"revenue\": \"955149195\",\n            \"mpa_rating\": \"PG\",\n            \"poster_url\": \"/yFHHfHcUgGAxziP1C3lLt0q2T4s.jpg\",\n            \"backdrop_url\": \"/2Nti3gYAX513wvhp8IiLL6ZDyOm.jpg\"\n        },\n        {\n            \"title\": \"A Working Man\",\n            \"original_title\": \"A Working Man\",\n            \"directors\": \"David Ayer\",\n            \"genres\": \"Action, Crime, Thriller\",\n            \"release_date\": \"2025-03-26T00:00:00.000Z\",\n            \"runtime_minutes\": 116,\n            \"overview\": \"Levon Cade left behind a decorated military career in the black ops to live a simple life working construction. But when his boss's daughter, who is like family to him, is taken by human traffickers, his search to bring her home uncovers a world of corruption far greater than he ever could have imagined.\",\n            \"budget\": \"40000000\",\n            \"revenue\": \"99068160\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/6FRFIogh3zFnVWn7Z6zcYnIbRcX.jpg\",\n            \"backdrop_url\": \"/fTrQsdMS2MUw00RnzH0r3JWHhts.jpg\"\n        },\n        {\n            \"title\": \"Ad Vitam\",\n            \"original_title\": \"Ad Vitam\",\n            \"directors\": \"Rodolphe Lauga\",\n            \"genres\": \"Action, Crime, Drama, Thriller\",\n            \"release_date\": \"2025-01-09T00:00:00.000Z\",\n            \"runtime_minutes\": 97,\n            \"overview\": \"When he and his pregnant wife are attacked in their home, a former elite agent becomes trapped in a deadly manhunt tied to his own painful past.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/xqBSapk1nC35WlZ6PraMjOVMQBy.jpg\",\n            \"backdrop_url\": \"/dMloNvayweggmvv0UD0iOJIkkbH.jpg\"\n        },\n        {\n            \"title\": \"Alarum\",\n            \"original_title\": \"Alarum\",\n            \"directors\": \"Michael Polish\",\n            \"genres\": \"Action, Crime, Thriller\",\n            \"release_date\": \"2025-01-16T00:00:00.000Z\",\n            \"runtime_minutes\": 95,\n            \"overview\": \"Two married spies caught in the crosshairs of an international intelligence network will stop at nothing to obtain a critical asset. Joe and Lara are agents living off the grid whose quiet retreat at a winter resort is blown to shreds when members of the old guard suspect the two may have joined an elite team of rogue spies, known as Alarum.\",\n            \"budget\": \"20000000\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/ckyYZf5cGTSOwF8LWIRqeThyh18.jpg\",\n            \"backdrop_url\": \"/qSOMdbZ6AOdHR999HWwVAh6ALFI.jpg\"\n        },\n        {\n            \"title\": \"Another Simple Favor\",\n            \"original_title\": \"Another Simple Favor\",\n            \"directors\": \"Paul Feig\",\n            \"genres\": \"Comedy, Crime, Thriller\",\n            \"release_date\": \"2025-03-07T00:00:00.000Z\",\n            \"runtime_minutes\": 123,\n            \"overview\": \"Stephanie and Emily reunite on the beautiful island of Capri, Italy for Emily's extravagant wedding to a rich Italian businessman. Along with the glamorous guests, expect murder and betrayal to RSVP for a wedding with more twists and turns than the road from the Marina Grande to the Capri town square.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/zboCGZ4aIqPMd7VFI4HWnmc7KYJ.jpg\",\n            \"backdrop_url\": \"/b6e5Nss2QNoQM4wJv2VppChswNP.jpg\"\n        },\n        {\n            \"title\": \"Ash\",\n            \"original_title\": \"Ash\",\n            \"directors\": \"Flying Lotus\",\n            \"genres\": \"Horror, Science Fiction\",\n            \"release_date\": \"2025-03-20T00:00:00.000Z\",\n            \"runtime_minutes\": 95,\n            \"overview\": \"A woman wakes up on a distant planet and finds the crew of her space station viciously killed. Her investigation into what happened sets in motion a terrifying chain of events.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/nRa8B3tQCUK6pVwjasIyQehbvpF.jpg\",\n            \"backdrop_url\": \"/sQa299yggIkxfwKJFgzYwDdsC9t.jpg\"\n        },\n        {\n            \"title\": \"Back in Action\",\n            \"original_title\": \"Back in Action\",\n            \"directors\": \"Seth Gordon\",\n            \"genres\": \"Action, Comedy\",\n            \"release_date\": \"2025-01-15T00:00:00.000Z\",\n            \"runtime_minutes\": 114,\n            \"overview\": \"Fifteen years after vanishing from the CIA to start a family, elite spies Matt and Emily jump back into the world of espionage when their cover is blown.\",\n            \"budget\": \"0\",\n            \"revenue\": \"0\",\n            \"mpa_rating\": \"PG-13\",\n            \"poster_url\": \"/3L3l6LsiLGHkTG4RFB2aBA6BttB.jpg\",\n            \"backdrop_url\": \"/mkxGpqh4yOYqtENv01IrDcesFRf.jpg\"\n        },\n        {\n            \"title\": \"Ballerina\",\n            \"original_title\": \"Ballerina\",\n            \"directors\": \"Len Wiseman\",\n            \"genres\": \"Action, Crime, Thriller\",\n            \"release_date\": \"2025-06-04T00:00:00.000Z\",\n            \"runtime_minutes\": 125,\n            \"overview\": \"Taking place during the events of John Wick: Chapter 3 – Parabellum, Eve Macarro begins her training in the assassin traditions of the Ruska Roma.\",\n            \"budget\": \"90000000\",\n            \"revenue\": \"131794570\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/2VUmvqsHb6cEtdfscEA6fqqVzLg.jpg\",\n            \"backdrop_url\": \"/sItIskd5xpiE64bBWYwZintkGf3.jpg\"\n        },\n        {\n            \"title\": \"Black Bag\",\n            \"original_title\": \"Black Bag\",\n            \"directors\": \"Steven Soderbergh\",\n            \"genres\": \"Drama, Mystery, Thriller\",\n            \"release_date\": \"2025-03-12T00:00:00.000Z\",\n            \"runtime_minutes\": 94,\n            \"overview\": \"When intelligence agent Kathryn Woodhouse is suspected of betraying the nation, her husband – also a legendary agent – faces the ultimate test of whether to be loyal to his marriage, or his country.\",\n            \"budget\": \"50000000\",\n            \"revenue\": \"34985600\",\n            \"mpa_rating\": \"R\",\n            \"poster_url\": \"/hHPovtU4b96LHcoeEwRkGHI5btw.jpg\",\n            \"backdrop_url\": \"/gxO51FVgADhYGGnnRPIlutVqb30.jpg\"\n        }\n    ],\n    \"pagination\": {\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"totalItems\": 111,\n        \"totalPages\": 12,\n        \"hasNextPage\": true,\n        \"hasPreviousPage\": false\n    }\n}"
						},
						{
							"name": "Invalid Year Parameter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/movies?year=invalid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"movies"
									],
									"query": [
										{
											"key": "year",
											"value": "invalid"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": [\n        {\n            \"expected\": \"number\",\n            \"code\": \"invalid_type\",\n            \"received\": \"NaN\",\n            \"path\": [\n                \"year\"\n            ],\n            \"message\": \"Invalid input: expected number, received NaN\"\n        }\n    ],\n    \"timestamp\": \"2025-10-27T03:29:40.613Z\"\n}"
						}
					]
				},
				{
					"name": "Get Movie by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/movies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"movies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40",
									"description": "Movie ID"
								}
							]
						},
						"description": "Retrieve detailed information about a specific movie by its ID"
					},
					"response": [
						{
							"name": "Movie Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "123"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Miraculous World: London, At the Edge of Time\",\n    \"original_title\": \"Miraculous World : Londres, la course contre le temps\",\n    \"directors\": \"Thomas Astruc\",\n    \"genres\": \"Action, Adventure, Animation, Fantasy\",\n    \"release_date\": \"2024-11-14T00:00:00.000Z\",\n    \"runtime_minutes\": 50,\n    \"overview\": \"Now, Chronobug and Bunnyx must stop a new Butterfly Miraculous holder and save the future.\",\n    \"budget\": \"0\",\n    \"revenue\": \"0\",\n    \"mpa_rating\": \"PG\",\n    \"poster_url\": \"/6AtoMpHvs9pxd30KsyK8QmJ9W9M.jpg\",\n    \"backdrop_url\": \"/cBTwQKMd7Vn6rGTGBtoFLIfj7uM.jpg\"\n}"
						},
						{
							"name": "Movie Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/movies/99999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"movies",
										"99999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"movie not found\",\n    \"timestamp\": \"2025-10-27T03:33:05.442Z\"\n}"
						},
						{
							"name": "Invalid ID Parameter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/movies/invalid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"movies",
										"invalid"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": \"id must be a number\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						}
					]
				},
				{
					"name": "Delete Movie by ID (dont run me pls)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/movies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"movies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "123",
									"description": "Movie ID to delete"
								}
							]
						},
						"description": "Permanently delete a movie and all associated relationships (directors, genres, studios) via CASCADE deletion. Requires authentication."
					},
					"response": [
						{
							"name": "Movie Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/movies/123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"123"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Movie \\\"The Shawshank Redemption\\\" has been permanently deleted\",\n    \"deleted_movie\": {\n        \"movie_id\": 123,\n        \"title\": \"The Shawshank Redemption\",\n        \"original_title\": \"The Shawshank Redemption\",\n        \"release_date\": \"1994-09-23\",\n        \"directors\": \"Frank Darabont\",\n        \"genres\": \"Drama, Crime\",\n        \"studios\": \"Castle Rock Entertainment\",\n        \"deleted_at\": \"2025-10-26T10:30:00.000Z\"\n    },\n    \"warning\": \"This action cannot be undone\"\n}"
						},
						{
							"name": "Movie Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/movies/99999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"99999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"Movie with id 99999 not found\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						},
						{
							"name": "Invalid ID Parameter",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/movies/-5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"-5"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": \"id must be a valid positive number\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						},
						{
							"name": "Deletion Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/movies/123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"123"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 500,\n    \"message\": \"Failed to delete movie\",\n    \"timestamp\": \"2025-10-25T12:00:00.000Z\"\n}"
						}
					]
				}
			],
			"description": "Movie data operations"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "remoteUrl",
			"value": ""
		},
		{
			"key": "localUrl",
			"value": ""
		}
	]
}